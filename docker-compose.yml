version: '3.8'

services:
  # MongoDB Primary Database (Replica Set)
  mongodb:
    image: mongo:7.0
    container_name: sdrms-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: sdrms
    volumes:
      - mongodb_data:/data/db
    networks:
      - sdrms-network
    command: [
      "mongod",
      "--replSet", "sdrms-rs",
      "--bind_ip_all",
      "--port", "27017"
    ]

  # OpenSearch for Search Functionality
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: sdrms-opensearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      - cluster.name=sdrms-cluster
      - node.name=sdrms-node
      - discovery.type=single-node
      - bootstrap.memory_lock=false
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=false"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - sdrms-network

  # OpenSearch Dashboards
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    container_name: sdrms-dashboards
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    volumes:
      - ./docker/opensearch-dashboards/config:/usr/share/opensearch-dashboards/config
    networks:
      - sdrms-network
    depends_on:
      - opensearch

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sdrms-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://mongodb:27017/sdrms?replicaSet=sdrms-rs
      OPENSEARCH_URL: http://opensearch:9200
      JWT_SECRET: sdrms_jwt_secret_2024_haryana
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - sdrms-network
    depends_on:
      - mongodb
      - opensearch

  # Sync Service
  sync-service:
    build:
      context: ./sync-service
      dockerfile: Dockerfile
    container_name: sdrms-sync
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb:27017/sdrms?replicaSet=sdrms-rs
      OPENSEARCH_URL: http://opensearch:9200
    volumes:
      - ./sync-service:/app
      - /app/node_modules
    networks:
      - sdrms-network
    depends_on:
      - mongodb
      - opensearch

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sdrms-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_OPENSEARCH_DASHBOARDS_URL: http://localhost:5601
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sdrms-network
    depends_on:
      - backend

  # Redis for Caching (Optional)
  redis:
    image: redis:7.2-alpine
    container_name: sdrms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sdrms-network
    command: redis-server --appendonly yes --requirepass sdrms_redis_2024

volumes:
  mongodb_data:
    driver: local
  opensearch_data:
    driver: local
  redis_data:
    driver: local

networks:
  sdrms-network:
    driver: bridge
